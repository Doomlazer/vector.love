local colorWindowX=50
local colorWindowY=100
local colorWindowHeight=210
local swatchWidth=30
local swatchheight=30
local selx=colorWindowX
local sely=colorWindowY


function draw256window()
  local xx,yy=colorWindowX,colorWindowX
  local offset=0
  local rowcontrol=colorWindowHeight
  local z=6
  love.graphics.setColor(1,1,1,1)
  love.graphics.print(currentObject.name.." color select",colorWindowX,colorWindowY-70)
  love.graphics.print("RGB( "..currentObject.r..", "..currentObject.g..", "..currentObject.r.." )",colorWindowX,colorWindowY+320)
  if love.keyboard.isDown("lshift") then
    love.graphics.setColor(defr,defg,defb,1)
    love.graphics.print("Setting default color",colorWindowX+540,colorWindowY-70)
  else
    love.graphics.setColor(1,1,1,1)
    love.graphics.print("(V) to set default color",colorWindowX+500,colorWindowY-70)
  end
  for k,v in pairs(myColorTable) do
    love.graphics.setColor(v[1]/256,v[2]/256,v[3]/256,1)
    love.graphics.rectangle("fill",xx,yy+offset,swatchWidth,swatchheight)
    if (mx>=xx and mx<xx+swatchWidth) then
      if (my>=yy+offset and my<yy+swatchheight+offset) then
        selx,sely=xx,yy+offset
        currentObject.r,currentObject.g,currentObject.b=v[1]/256,v[2]/256,v[3]/256
      end
    end
    yy=yy+swatchheight
    if (yy>=rowcontrol) then
      xx=xx+swatchWidth
      if (xx>23*swatchWidth) then
        if (offset>0) then
          --rowcontrol=swatchheight
        end
        offset=offset+swatchheight*z
        xx=colorWindowX
      end
      yy=colorWindowX
    end
  end
  --boarder
  love.graphics.setColor(0,0,0,1)
  love.graphics.setLineWidth(6)
  love.graphics.rectangle("line",selx,sely,swatchWidth,swatchheight)
end
function load256table()
return {
{255,255,255},
{255,255,215},
{255,255,175},
{255,255,135},
{255,255,95},
{255,255,0},
{255,215,255},
{255,215,215},
{255,215,175},
{255,215,135},
{255,215,95},
{255,215,0},
{255,175,255},
{255,175,215},
{255,175,175},
{255,175,135},
{255,175,95},
{255,175,0},
{255,135,255},
{255,135,215},
{255,135,175},
{255,135,135},
{255,135,95},
{255,135,0},
{255,95,255},
{255,95,215},
{255,95,175},
{255,95,135},
{255,95,95},
{255,95,0},
{255,0,255},
{255,0,215},
{255,0,175},
{255,0,135},
{255,0,95},
{255,0,0},
{215,255,255},
{215,255,215},
{215,255,175},
{215,255,135},
{215,255,95},
{215,255,0},
{215,215,255},
{215,215,215},
{215,215,175},
{215,215,135},
{215,215,95},
{215,215,0},
{215,175,255},
{215,175,215},
{215,175,175},
{215,175,135},
{215,175,95},
{215,175,0},
{215,135,255},
{215,135,215},
{215,135,175},
{215,135,135},
{215,135,95},
{215,135,0},
{215,95,255},
{215,95,215},
{215,95,175},
{215,95,135},
{215,95,95},
{215,95,0},
{215,0,255},
{215,0,215},
{215,0,175},
{215,0,135},
{215,0,95},
{215,0,0},
{175,255,255},
{175,255,215},
{175,255,175},
{175,255,135},
{175,255,95},
{175,255,0},
{175,215,255},
{175,215,215},
{175,215,175},
{175,215,135},
{175,215,95},
{175,215,0},
{175,175,255},
{175,175,215},
{175,175,175},
{175,175,135},
{175,175,95},
{175,175,0},
{175,135,255},
{175,135,215},
{175,135,175},
{175,135,135},
{175,135,95},
{175,135,0},
{175,95,255},
{175,95,215},
{175,95,175},
{175,95,135},
{175,95,95},
{175,95,0},
{175,0,255},
{175,0,215},
{175,0,175},
{175,0,135},
{175,0,95},
{175,0,0},
{238,238,238},
{228,228,228},
{218,218,218},
{208,208,208},
{198,198,198},
{188,188,188},
{178,178,178},
{168,168,168},
{158,158,158},
{148,148,148},
{138,138,138},
{128,128,128},
{118,118,118},
{108,108,108},
{98,98,98},
{88,88,88},
{78,78,78},
{68,68,68},
{58,58,58},
{48,48,48},
{38,38,38},
{28,28,28},
{18,18,18},
{8,8,8},
{135,255,255},
{135,255,215},
{135,255,175},
{135,255,135},
{135,255,95},
{135,255,0},
{135,215,255},
{135,215,215},
{135,215,175},
{135,215,135},
{135,215,95},
{135,215,0},
{135,175,255},
{135,175,215},
{135,175,175},
{135,175,135},
{135,175,95},
{135,175,0},
{135,135,255},
{135,135,215},
{135,135,175},
{135,135,135},
{135,135,95},
{135,135,0},
{135,95,255},
{135,95,215},
{135,95,175},
{135,95,135},
{135,95,95},
{135,95,0},
{135,0,255},
{135,0,215},
{135,0,175},
{135,0,135},
{135,0,95},
{135,0,0},
{95,255,255},
{95,255,215},
{95,255,175},
{95,255,135},
{95,255,95},
{95,255,0},
{95,215,255},
{95,215,215},
{95,215,175},
{95,215,135},
{95,215,95},
{95,215,0},
{95,175,255},
{95,175,215},
{95,175,175},
{95,175,135},
{95,175,95},
{95,175,0},
{95,135,255},
{95,135,215},
{95,135,175},
{95,135,135},
{95,135,95},
{95,135,0},
{95,95,255},
{95,95,215},
{95,95,175},
{95,95,135},
{95,95,95},
{95,95,0},
{95,0,255},
{95,0,215},
{95,0,175},
{95,0,135},
{95,0,95},
{95,0,0},
{0,255,255},
{0,255,215},
{0,255,175},
{0,255,135},
{0,255,95},
{0,255,0},
{0,215,255},
{0,215,215},
{0,215,175},
{0,215,135},
{0,215,95},
{0,215,0},
{0,175,255},
{0,175,215},
{0,175,175},
{0,175,135},
{0,175,95},
{0,175,0},
{0,135,255},
{0,135,215},
{0,135,175},
{0,135,135},
{0,135,95},
{0,135,0},
{0,95,255},
{0,95,215},
{0,95,175},
{0,95,135},
{0,95,95},
{0,95,0},
{0,0,255},
{0,0,215},
{0,0,175},
{0,0,135},
{0,0,95},
{0,0,0},
{255,255,255},
{0,255,255},
{255,0,255},
{0,0,255},
{255,255,0},
{0,255,0},
{255,0,0},
{128,128,128},
{192,192,192},
{0,128,128},
{128,0,128},
{0,0,128},
{128,128,0},
{0,128,0},
{128,0,0},
{0,0,0}}

end
